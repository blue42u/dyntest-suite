# Config file for everything

# Uncomment to enable proper OpenMP debugging for Valgrind tests. The lib*omp
# in the given directory should be compatible with Valgrind, for GCC this
# involves adding --disable-linux-futex to the build arguments.
#CONFIG_ENABLE_OMP_DEBUG=/path/to/libomp

# Maximum number of threads to use for performance runs. If not specified the
# number of cores on the machine will be used, which may not be what you want.
#CONFIG_MAX_THREADS=NN

# Representative size-class for Valgrind test inputs, approximately from 1-3.
# Technically this is the maximum size-class for Memcheck and Massif, Helgrind
# is one less and DRD is two less. So 1 will do very little, 3 will run the
# minimal DRD, and 5 will run everything available (except extra inputs).
#CONFIG_VAL_CLASS=2

# Individual toggles for Valgrind testing, in the event that not all are useful
# for a particular use case. Those that are useful more of the time are enabled
# by default, those that are more specific are disabled by default.
#CONFIG_TEST_VAL=y
#CONFIG_TEST_MEMCHECK=y
#CONFIG_TEST_HELGRIND=y
#CONFIG_TEST_DRD=y
#CONFIG_TEST_MASSIF=n
#CONFIG_TEST_CALLGRIND=n

# Repeatitions of the coarse performance testing to try and get better results.
# More data can be better, but too large and this takes forever.
# The default is set at 3 to get a small sample without going overboard.
#CONFIG_PERF_REP=3

# Repeatitions for crash testing to try and break things. Default is disabled
# because normally Valgrind will give nicer results in the end.
#CONFIG_CRASH_REP=0

# Debugging options. Unless something goes horribly wrong (and/or you want to
# do some development on the build system), you don't need these.
#CONFIG_DEBUG_CONFIGURE=y
#CONFIG_DEBUG_MAKE_TRANSLATION=y
