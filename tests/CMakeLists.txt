# The full testing suite. Complete with cookies.

# Each test is run through this function which generates the actual targets.
function(Test name input)
  set(TO_0V)
  set(TO_1V TARGET EXEC REFEXEC OUTFLAG INFLAG INSTPATH)
  set(TO_MV EXTRA_ARGS JOBFLAGS)
  cmake_parse_arguments(PARSE_ARGV 1 T "${TO_0V}" "${TO_1V}" "${TO_MV}")

  # Master target for dependency tracking
  set(T_NAME Test${name})
  add_custom_target(${T_NAME} ALL)
  add_custom_target(${T_NAME}_Prep)
  add_dependencies(${T_NAME} ${T_NAME}_Prep)
  macro(T_stage name) # name files...
    add_custom_target(${T_NAME}_${name} DEPENDS ${ARGN})
    add_dependencies(${T_NAME}_${name} ${T_NAME}_Prep)
    add_dependencies(${T_NAME} ${T_NAME}_${name})
  endmacro(T_stage)

  if(NOT T_TARGET)
    if(NOT T_EXEC OR NOT T_REFEXEC)
      message(FATAL_ERROR "EXEC or REFEXEC not given!")
    endif()
  elseif(T_INSTPATH)
    add_dependencies(${T_NAME}_Prep ${T_TARGET} ${T_TARGET}_Ref)
    set(T_EXEC "$<TARGET_PROPERTY:${T_TARGET},_EP_INSTALL_DIR>/${T_INSTPATH}")
    set(T_REFEXEC "$<TARGET_PROPERTY:${T_TARGET}_Ref,_EP_INSTALL_DIR>/${T_INSTPATH}")
  else()
    add_dependencies(${T_NAME}_Prep ${T_TARGET} ${T_TARGET}_Ref)
    set(T_EXEC $<TARGET_FILE:${T_TARGET}>)
    set(T_REFEXEC $<TARGET_FILE:${T_TARGET}_Ref>)
  endif()

  if(NOT T_JOBFLAGS)
    set(T_CMD ${T_CMD} env OMP_NUM_THREADS=%j)
  endif()
  set(T_CMD ${T_CMD} %e ${T_EXTRA_ARGS})
  if(T_INFLAG)
    set(T_CMD ${T_CMD} ${T_INFLAG} %i)
  endif()
  if(T_OUTFLAG)
    set(T_CMD ${T_CMD} ${T_OUTFLAG} %o)
  endif()
  if(T_JOBFLAG)
    foreach(JF ${T_JOBFLAGS})
      set(T_CMD ${T_CMD} ${JF} %j)
    endforeach()
  endif()
  if(NOT T_INFLAG)
    set(T_CMD ${T_CMD} %i)
  endif()
  if(NOT T_OUTFLAG)
    set(T_CMD ${T_CMD} > %o)
  endif()
  macro(T_cmd in out jobs)
    string(REPLACE %e ${T_EXEC} _cmd "${T_CMD}")
    string(REPLACE %i ${in} _cmd "${_cmd}")
    string(REPLACE %o ${out} _cmd "${_cmd}")
    string(REPLACE %j ${jobs} _cmd "${_cmd}")
    add_custom_command(OUTPUT ${out} COMMAND ${_cmd})
  endmacro(T_cmd)
  macro(T_cmdR in out jobs)
    string(REPLACE %e ${T_REFEXEC} _cmd "${T_CMD}")
    string(REPLACE %i ${in} _cmd "${_cmd}")
    string(REPLACE %o ${out} _cmd "${_cmd}")
    string(REPLACE %j ${jobs} _cmd "${_cmd}")
    add_custom_command(OUTPUT ${out} COMMAND ${_cmd})
  endmacro(T_cmdR)

  set(T_DIR ${CMAKE_CURRENT_BINARY_DIR}/${T_NAME})
  file(MAKE_DIRECTORY ${T_DIR})

  # Stability/regression testing
  T_cmdR(${input} ${T_DIR}/stable.ref 1)
  foreach(N 1 2 4 8 16 32)
    T_cmd(${input} ${T_DIR}/stable.${N} ${N})
    add_custom_command(OUTPUT ${T_DIR}/stable.${N}.diff
      COMMAND diff ${T_DIR}/stable.ref ${T_DIR}/stable.${N} > ${T_DIR}/stable.${N}.diff
      DEPENDS ${T_DIR}/stable.ref ${T_DIR}/stable.${N})
    set(TS_files ${TS_files} ${T_DIR}/stable.${N}.diff)
  endforeach()
  T_stage(stable ${TS_files})
endfunction(Test)

Test(SanityEx $<TARGET_FILE:exinput> TARGET exdump)
Test(SanityUs $<TARGET_FILE:exinput>
  TARGET Dyninst INSTPATH bin/unstrip INFLAG -f OUTFLAG -o
)
